# Generated by Django 4.2.10 on 2025-04-05 14:50

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Setting Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('email_signature', models.TextField(blank=True, help_text='Signature to append to all emails', verbose_name='Email Signature')),
                ('notify_all_agents_on_new_ticket', models.BooleanField(default=True, verbose_name='Notify all agents on new ticket')),
                ('notify_selected_agents_only', models.BooleanField(default=False, help_text='If enabled, only agents in selected_agents will be notified', verbose_name='Notify only selected agents')),
                ('notify_customer_on_ticket_created', models.BooleanField(default=True, verbose_name='Notify customer when ticket is created')),
                ('notify_customer_on_status_change', models.BooleanField(default=True, verbose_name='Notify customer on status change')),
                ('notify_customer_on_comment', models.BooleanField(default=True, verbose_name='Notify customer when comment is added')),
                ('notify_agent_on_assignment', models.BooleanField(default=True, verbose_name='Notify agent when ticket is assigned')),
                ('notify_agent_on_comment', models.BooleanField(default=True, verbose_name='Notify agent when comment is added')),
                ('selected_agents', models.ManyToManyField(blank=True, limit_choices_to={'user_type': 'agent'}, related_name='notification_settings', to=settings.AUTH_USER_MODEL, verbose_name='Selected Agents')),
            ],
            options={
                'verbose_name': 'Email Setting',
                'verbose_name_plural': 'Email Settings',
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_type', models.CharField(choices=[('ticket_created', 'Ticket Created'), ('ticket_assigned', 'Ticket Assigned'), ('ticket_updated', 'Ticket Updated'), ('comment_added', 'Comment Added'), ('internal_comment', 'Internal Comment'), ('status_change', 'Status Change'), ('other', 'Other')], default='other', max_length=50, verbose_name='Email Type')),
                ('subject', models.CharField(max_length=255, verbose_name='Subject')),
                ('recipient', models.EmailField(max_length=254, verbose_name='Recipient')),
                ('content', models.TextField(blank=True, verbose_name='Content')),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Related Object ID')),
                ('related_object_type', models.CharField(blank=True, max_length=100, verbose_name='Related Object Type')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed')], default='pending', max_length=20, verbose_name='Status')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
            ],
            options={
                'verbose_name': 'Email Log',
                'verbose_name_plural': 'Email Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['email_type'], name='core_emaill_email_t_7fa3e2_idx'), models.Index(fields=['status'], name='core_emaill_status_580ed7_idx'), models.Index(fields=['created_at'], name='core_emaill_created_be864d_idx'), models.Index(fields=['recipient'], name='core_emaill_recipie_419f42_idx')],
            },
        ),
    ]
